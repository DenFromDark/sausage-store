cache:
  paths:
    - ${CI_PROJECT_DIR}/.m2/repository

variables:
   VERSION: 1.0.${CI_PIPELINE_ID}
   MAVEN_REPO_PATH: ${CI_PROJECT_DIR}/.m2/repository
   JAVA_OPTS: -XX:MaxRAMPercentage=90 # для того, чтобы Maven не съел всю свободную оперативку

stages:
   - build
   - release
   - notify

build:
    stage: build
    script:
      - cd backend
      - mvn package -Dversion.application=${VERSION} -Dmaven.repo.local=${MAVEN_REPO_PATH}
#    artifacts:
#      paths:
#       - backend/target/sausage-store-${VERSION}.jar
#       - ${CI_PROJECT_DIR}/.m2/ # Сохранение зависимостей для SAST 
    rules: # rules и only в данных случаях взаимозаменяемы
      - changes:
        - backend/*

release:
   stage: release
   script:
      - cd backend
      - mvn deploy -DskipTests -Dversion.application=${VERSION} -Dmaven.repo.local=${MAVEN_REPO_PATH} -s settings.xml
   rules:
      - changes:
           - backend/*


#build-backend-code-job:
#    stage: build
#    only:
#     changes:
#     - backend/**/*
#      - .gitlab-ci.yml
#      - devops/.*.yml
#    script:
#      - cd backend
#      - mvn package -Dmaven.repo.local=${CI_PROJECT_DIR}/.m2/repository -Dversion.application=${VERSION}
#   artifacts:
#    paths:
#     - backend/target/sausage-store-${VERSION}.jar
#     - ${CI_PROJECT_DIR}/.m2/ # Сохранение зависимостей для SAST 

#upload-backend-release:
# stage: release
# only:
#    changes:
#     - backend/**/*
#     - .gitlab-ci.yml
#     - devops/.*.yml
# needs:
#   - build-backend-code-job
# script:
#   - cd backend
#   - mvn -Dmaven.repo.local=${CI_PROJECT_DIR}/.m2/repository -s settings.xml -Dversion.application=${VERSION} -DskipTests deploy

notification-backend:
  stage: notify
  only:
    variables:
      - $CI_COMMIT_MESSAGE =~ /send version/
  variables:
    DATA: '{"message":"Вышла новая версия Backend сосисочной — ${VERSION}. Скачать Backend можно по ссылке — ${NEXUS_REPO_URL}sausage-store-ponizovskiy-denis-backend/com/yandex/practicum/devops/sausage-store/${VERSION}/sausage-store-${VERSION}.jar"}'
    CONTENT_TYPE: 'Content-type: application/json'
    PACHKA_WEBHOOK: 'https://api.pachca.com/webhooks/01GKW5NQ2PPC9V9CGACZ6SE94Z'
  script:
    - printenv
    - 'curl -X POST -H "$CONTENT_TYPE" --data "$DATA" "$PACHKA_WEBHOOK"'
  needs:
    - release


#slack-notification-backend:
#  stage: notify
#  only:
#   variables:
#   - $CI_COMMIT_MESSAGE =~ /send notification/
# script:
#   - curl -X POST -H "Content-type:/ application/json" --data '{"text":"Денис Понизовский собрал back при помощи Gitlab CI. <https://gitlab.praktikum-services.ru/api/v4/projects/1143/jobs/artifacts/release-0.0.1/download?job=build-backend-code-job&private_token=346sb6Y4ocmMyc2i-sNN|Скачать артефакты>"}' https://hooks.slack.com/services/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 
# needs:
#   - build-backend-code-job
