cache:
  paths:
    - frontend/dist/frontend

variables:
  VERSION: 1.0.${CI_PIPELINE_ID}

stages:
   - build
   - release
   - notify
   - deploy

build:
  stage: build
  script:
    - cd frontend
    - npm install
    - npm run build
  artifacts:
    paths:
      - frontend/dist/frontend
      - ${CI_PROJECT_DIR}/.m2/ # Сохранение зависимостей для SAST
  only:
    changes:
    - frontend/*
    - .gitlab-ci.yml
    - devops/.frontend.yml
    - devops/deploy_front.sh
    - devops/sausage-store-frontend.service

release:
  stage: release
  script:
    - tar czvf sausage-store-${VERSION}.tar.gz frontend
    - curl -v -u "${NEXUS_REPO_USER}:${NEXUS_REPO_PASS}" --upload-file sausage-store-${VERSION}.tar.gz ${NEXUS_REPO_URL}/sausage-store-ponizovskiy-denis-frontend/sausage-store/${VERSION}/sausage-store-${VERSION}.tar.gz
  only:
    changes:
    - frontend/*
    - .gitlab-ci.yml
    - devops/.frontend.yml
    - devops/deploy_front.sh
    - devops/sausage-store-frontend.service

#build-frontend-code-job:
#    stage: build
#    only:
#      changes:
#      - frontend/*
#      - .gitlab-ci.yml
#      - devops/.*.yml
#    script:
#      - cd frontend
#      - npm install
#      - npm run build
#    artifacts:
#      paths:
#        - frontend/dist/frontend
#        - ${CI_PROJECT_DIR}/.m2/ # Сохранение зависимостей для SAST
#
#upload-frontend-release:
#  stage: release
#  only:
#    changes:
#      - frontend/**/*
#      - .gitlab-ci.yml
#      - devops/.*.yml
#  needs:
#    - build-frontend-code-job
#  script:
#    - cd frontend/dist
#   - tar czvf sausage-store-${VERSION}.tar.gz frontend
#    - curl -v -u "${NEXUS_REPO_USER}:${NEXUS_REPO_PASS}" --upload-file sausage-store-${VERSION}.tar.gz ${NEXUS_REPO_URL}/sausage-store-ponizovskiy-denis-frontend/sausage-store/${VERSION}/sausage-store-${VERSION}.tar.gz
notification-frontend:
  stage: notify
  only:
    variables:
      - $CI_COMMIT_MESSAGE =~ /send version/
  variables:
    DATA: '{"message":"Вышла новая версия Frontend сосисочной — ${VERSION}. Скачать Frontend можно по ссылке — ${NEXUS_REPO_URL}sausage-store-ponizovskiy-denis-frontend/sausage-store/${VERSION}/sausage-store-${VERSION}.tar.gz"}'
    CONTENT_TYPE: 'Content-type: application/json'
    PACHKA_WEBHOOK: 'https://api.pachca.com/webhooks/01GKW5NQ2PPC9V9CGACZ6SE94Z'
  script:
    - printenv
    - 'curl -X POST -H "$CONTENT_TYPE" --data "$DATA" "$PACHKA_WEBHOOK"'
  needs:
    - release

#slack-notification-frontend:
#    stage: notify
#    only:
#     variables:
#     - $CI_COMMIT_MESSAGE =~ /send notification/
#   script:
#     - curl -X POST -H "Content-type:/ application/json" --data '{"text":"Денис Понизовский собрал front при помощи Gitlab CI. <https://gitlab.praktikum-services.ru/api/v4/projects/1143/jobs/artifacts/release-0.0.1/download?job=build-frontend-code-job&private_token=346sb6Y4ocmMyc2i-sNN|Скачать артефакты>"}' https://hooks.slack.com/services/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
#   needs:
#      - build-frontend-code-job

before_script:
  #устанавливаем ssh-agent для удобства аутентификации по ssh
  - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
  - eval $(ssh-agent -s)
  #сохраняем сгенеренный ранее приватный ключ для раннера
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
  - mkdir -p ~/.ssh
  - chmod 600 ~/.ssh
  #Добавляем хост
  - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts

deploy:
  stage: deploy
  environment:
    name: staging
    url: http://51.250.67.45
    on_stop: stop_review
  rules:
    - if: $CI_MERGE_REQUEST_ID
    #on_stop: deploy
  script:
  #- ssh ${DEV_USER}@${DEV_HOST}

  # прописать креды от Nexus в переменные в настройке пайплайна
  - scp ./devops/sausage-store-frontend.service ${DEV_USER}@${DEV_HOST}:/home/${DEV_USER}/sausage-store-frontend.service
  - scp -v ./devops/deploy_front.sh ${DEV_USER}@${DEV_HOST}:/home/${DEV_USER}/deploy_front.sh
  - ssh ${DEV_USER}@${DEV_HOST} "chmod +x /home/${DEV_USER}/deploy_front.sh"
  #- curl -u ${NEXUS_REPO_USER}:${NEXUS_REPO_PASS} -o sausage-store-${VERSION}.jar ${NEXUS_REPO_URL}sausage-store-ponizovskiy-denis-backend/com/yandex/practicum/devops/sausage-store/${VERSION}/sausage-store-${VERSION}.jar
  - ssh ${DEV_USER}@${DEV_HOST} "export "VERSION=${VERSION}"; export "DEV_USER=${DEV_USER}"; export "DEV_HOST=${DEV_HOST}";export "NEXUS_REPO_URL=${NEXUS_REPO_URL}";export "NEXUS_REPO_USER=${NEXUS_REPO_USER}"; export "NEXUS_REPO_PASS=${NEXUS_REPO_PASS}";setsid /bin/bash -s  < /home/${DEV_USER}/deploy_front.sh"
  - ssh ${DEV_USER}@${DEV_HOST} "echo "${VERSION}""
  # скачиваем ранее собранный артефакт с Nexus. При этом необходимо заранее
  # запускаем бэкенд
  #- java -jar sausage-store-${VERSION}.jar & 
  needs:
    - release

stop_review:
  stage: deploy
  script:
    - echo "Remove review app"
  environment:
    name: review/$CI_COMMIT_REF_SLUG
    action: stop
  rules:
    - if: $CI_MERGE_REQUEST_ID
      when: manual