include:
  - project: '../templates/ci'
    file: 'DockerInDockerTemplate.yml'

#cache:
#  paths:
#    - frontend/dist/frontend

variables:
  VERSION: 1.0.${CI_PIPELINE_ID}

stages:
   - build
   - release
   - deploy

build-frontend:
  stage: build
  image: docker:20.10.12-dind-rootless
  before_script:
    - until docker info; do sleep 1; done
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - cd frontend
    - >
      docker build
      --build-arg VERSION=$VERSION
      tag $CI_REGISTRY_IMAGE/sausage-frontend:$CI_COMMIT_SHA
      .
    - docker push $CI_REGISTRY_IMAGE/sausage-frontend:$CI_COMMIT_SHA
    
#  artifacts:
#    paths:
#      - frontend/dist/frontend
#      - ${CI_PROJECT_DIR}/.m2/ # Сохранение зависимостей для SAST
#  only:
#    changes:
#    - frontend/*
#    - .gitlab-ci.yml
#    - devops/.frontend.yml
#    - devops/deploy_front.sh
#    - devops/sausage-store-frontend.service
#
#release:
#  stage: release
#  script:
#    - tar czvf sausage-store-${VERSION}.tar.gz frontend
#    - curl -v -u "${NEXUS_REPO_USER}:${NEXUS_REPO_PASS}" --upload-file sausage-store-${VERSION}.tar.gz ${NEXUS_REPO_URL}/sausage-store-ponizovskiy-denis-frontend/sausage-store/${VERSION}/sausage-store-${VERSION}.tar.gz
#  only:
#    changes:
#    - frontend/*
#    - .gitlab-ci.yml
#    - devops/.frontend.yml
#    - devops/deploy_front.sh
#    - devops/sausage-store-frontend.service
#
#notification-frontend:
#  stage: notify
#  only:
#    variables:
#      - $CI_COMMIT_MESSAGE =~ /send version/
#  variables:
#    DATA: '{"message":"Вышла новая версия Frontend сосисочной — ${VERSION}. Скачать Frontend можно по ссылке — ${NEXUS_REPO_URL}sausage-store-ponizovskiy-denis-frontend/sausage-store/${VERSION}/sausage-store-${VERSION}.tar.gz"}'
#    CONTENT_TYPE: 'Content-type: application/json'
#    PACHKA_WEBHOOK: 'https://api.pachca.com/webhooks/01GKW5NQ2PPC9V9CGACZ6SE94Z'
#  script:
#    - printenv
#    - 'curl -X POST -H "$CONTENT_TYPE" --data "$DATA" "$PACHKA_WEBHOOK"'
#  needs:
#    - release
#
#before_script:
#  #устанавливаем ssh-agent для удобства аутентификации по ssh
#  - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
#  - eval $(ssh-agent -s)
#  #сохраняем сгенеренный ранее приватный ключ для раннера
#  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
#  - mkdir -p ~/.ssh
#  - chmod 600 ~/.ssh
#  #Добавляем хост
#  - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
#  - chmod 644 ~/.ssh/known_hosts
#
#deploy:
#  stage: deploy
#  environment:
#    name: review/$CI_COMMIT_REF_SLUG
#    url: http://51.250.67.45
#    on_stop: stop_review
#  rules:
#    - if: $CI_MERGE_REQUEST_ID
#    #on_stop: deploy
#  rules:
#    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
#      when: never
#    - if: $CI_COMMIT_BRANCH
#  
#  script:
#  #- ssh ${DEV_USER}@${DEV_HOST}
#
#  # прописать креды от Nexus в переменные в настройке пайплайна
#  - scp ./devops/sausage-store-frontend.service ${DEV_USER}@${DEV_HOST}:/home/${DEV_USER}/sausage-store-frontend.service
#  - scp -v ./devops/deploy_front.sh ${DEV_USER}@${DEV_HOST}:/home/${DEV_USER}/deploy_front.sh
#  - ssh ${DEV_USER}@${DEV_HOST} "chmod +x /home/${DEV_USER}/deploy_front.sh"
#  #- curl -u ${NEXUS_REPO_USER}:${NEXUS_REPO_PASS} -o sausage-store-${VERSION}.jar ${NEXUS_REPO_URL}sausage-store-ponizovskiy-denis-backend/com/yandex/practicum/devops/sausage-store/${VERSION}/sausage-store-${VERSION}.jar
#  - ssh ${DEV_USER}@${DEV_HOST} "export "VERSION=${VERSION}"; export "DEV_USER=${DEV_USER}"; export "DEV_HOST=${DEV_HOST}";export "NEXUS_REPO_URL=${NEXUS_REPO_URL}";export "NEXUS_REPO_USER=${NEXUS_REPO_USER}"; export "NEXUS_REPO_PASS=${NEXUS_REPO_PASS}";setsid /bin/bash -s  < /home/${DEV_USER}/deploy_front.sh"
#  - ssh ${DEV_USER}@${DEV_HOST} "echo "${VERSION}""
#  # скачиваем ранее собранный артефакт с Nexus. При этом необходимо заранее
#  # запускаем бэкенд
#  #- java -jar sausage-store-${VERSION}.jar & 
#  needs:
#    - release
#
#stop_review:
#  stage: deploy
#  script:
#    - echo "Remove review app"
#  environment:
#    name: review/$CI_COMMIT_REF_SLUG
#    action: stop
#  rules:
#    - if: $CI_MERGE_REQUEST_ID
#      when: manual